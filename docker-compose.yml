version: '3.8'

networks:
    enyutech:
        driver: bridge

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
      - php
    links:
      - php
    networks:
      - enyutech
  # MySQL
  mysql:
    image: mysql:${MYSQL_VERSION}
    user: 1000:1000
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - './mysql:/var/lib/mysql'
    networks:
      - enyutech
  php:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    volumes:
      - ./src:/var/www/html
    networks:
      - enyutech
    extra_hosts:
      - host.docker.internal:host-gateway
  composer:
    build:
        context: .
        dockerfile: composer.dockerfile
        args:
          COMPOSER_VERSION: ${COMPOSER_VERSION}
    user: 1000:1000
    volumes:
        - ./src:/var/www/html
    working_dir: /var/www/html
  npm:
    image: node:${NODE_VERSION}
    user: 1000:1000
    volumes:
        - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
        - enyutech
    entrypoint: ["npm"]
  artisan:
    build:
        context: .
        dockerfile: php.dockerfile
        args:
          PHP_VERSION: ${PHP_VERSION}
    user: 1000:1000
    volumes:
        - ./src:/var/www/html
    networks:
        - enyutech
    working_dir: /var/www/html
    depends_on:
      - mysql
    entrypoint: ["php", "/var/www/html/artisan"]